Problem Link:- https://practice.geeksforgeeks.org/problems/zigzag-tree-traversal/1


class Solution{
    public:
    //Function to store the zig zag order traversal of tree in a list.
    vector <int> zigZagTraversal(Node* root)
    {
    	vector<int> result;
    	if(root == NULL)
    	  return result;
    	  
    	  queue<Node*> q;
    	  q.push(root);
    	  
    	  bool leftToRight = true;
    	  while(!q.empty())
    	  {
    	      int size = q.size();
    	      vector<int> ans(size);
    	      // jab tak queue empty nhi hoti tab tak har ek level ko process krna h ab har ek level mai bahut saare elements ho skte h so phele wo find krenge ki kitne element hai
    	      for(int i=0; i<size; i++)
    	      {
    	          Node* frontNode = q.front();
    	          q.pop();
    	          
    	          // Agar leftToRight true hai toh normal flow mai data jayega if false hai toh reverse order mai jayega
    	          int index = leftToRight ? i : size - i -1;
    	          ans[index] = frontNode -> data;
    	          
    	          // Now you have to consisdered the left and right child
    	          if(frontNode->left)
    	            q.push(frontNode->left);
    	            
    	          if(frontNode->right)
    	            q.push(frontNode->right);
    	      }
    	      
    	      // har ek level ko process krne k baad dirction change krni hai
    	      leftToRight = !leftToRight;
    	      
    	      for(auto i: ans)
    	      {
    	          result.push_back(i);
    	      }
    	  }
    	  
    	  return result;
    }
};

TC & SC:- O(N)
