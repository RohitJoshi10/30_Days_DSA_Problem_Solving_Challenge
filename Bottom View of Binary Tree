Problem link:- https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1

class Solution {
  public:
    vector <int> bottomView(Node *root) {
        // Your Code Here
         vector<int> ans;
        if(root == NULL)
          return ans;
          
        map<int,int> topNode;
        queue<pair<Node*, int> > q; // Queue k ander jo int h wo HD k liye hai
        q.push(make_pair(root,0));
        
        while(!q.empty())
        {
            pair<Node*, int> temp = q.front();
            q.pop();
            Node* frontNode = temp.first;
            int hd = temp.second;
          
            topNode[hd] = frontNode->data;
            
            // Jab left mai jate hai toh HD minus hota h and right jate time plus hota hai
            if(frontNode->left)
               q.push(make_pair(frontNode->left,hd-1));
            if(frontNode->right)
               q.push(make_pair(frontNode->right,hd+1));
        }
        
        for(auto i:topNode)
        {
            ans.push_back(i.second);
        }
        return ans;
    }
};
