Problem Link:- https://www.codingninjas.com/codestudio/problems/interview-shuriken-42-detect-and-remove-loop_241049


/*************************************************
    
    class Node {
        public :

        int data;
        Node *next;

        Node(int data) {
            this -> data = data;
            this -> next = NULL;
        }
    };

*************************************************/
// Detect cycle
Node* floyedDetectLoop(Node* head)
{
    if(head==NULL) return NULL;
    Node* slow = head;
    Node* fast = head;
    while(slow!=NULL && fast!=NULL)
    {
        fast = fast->next;
        if(fast!=NULL)
        {
            fast = fast->next;
        }

        slow = slow->next;

        if(slow==fast) return slow;
    }
    return NULL;
}


// Starting Node of loop
Node* getStartingNode(Node* head)
{
    if(head==NULL) return NULL;
    Node* intersection = floyedDetectLoop(head);
    if(intersection==NULL) return NULL;
    Node* slow = head;
    while(slow!=intersection)
    {
        slow = slow->next;
        intersection = intersection->next;
    }
    return slow;
}

// Remove Loop
Node *removeLoop(Node *head)
{
    if(head==NULL)
    return NULL;

    Node* startofLoop = getStartingNode(head);
    if(startofLoop==NULL) return head;
    Node* temp = startofLoop;
    while(temp->next!=startofLoop)
    {
        temp = temp->next;
    }

    temp->next = NULL;
    return head;
}
