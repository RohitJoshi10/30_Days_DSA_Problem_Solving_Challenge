Problem Link:- https://practice.geeksforgeeks.org/problems/merge-k-sorted-linked-lists/1


class cmp{
    public:
        bool operator()(Node *a,Node *b){
            if(a->data>b->data)
            return true;
            
            return false;
        }
};

class Solution{
  public:
    //Function to merge K sorted linked list.
    Node * mergeKLists(Node *arr[], int k)
    {
           // Your code here
           Node *dummy=new Node(-1);
           Node *curr=dummy;
           
           priority_queue<Node*,vector<Node*>,cmp> minHeap;
           for(int i=0; i<k; i++){
               if(arr[i]!=NULL)
                minHeap.push(arr[i]);
           }
           
           while(!minHeap.empty()){
               auto temp=minHeap.top();
               minHeap.pop();
               
               curr->next=temp;
               curr=curr->next;
               
               if(temp->next!=NULL)
               minHeap.push(temp->next);
           }
           
           return dummy->next;
    }
};


Expected Time Complexity: O(nk Logk)
Expected Auxiliary Space: O(k)
Note: n is the maximum size of all the k link list
