Problem Link:- https://leetcode.com/problems/valid-parentheses/description/

class Solution {
public:
    bool isValid(string s) {
         stack<char> st;
         for(int i=0; i<s.length(); i++)
         {
            char ch = s[i];
        
            // If Opening bracket, stack push
            if(ch == '(' || ch == '{' || ch == '['){
            st.push(ch);
         }
            // If Closing bracket, stacktop check and pop
         else
        {
            if(!st.empty())
            {
                 char top = st.top();
                 if(
                     (ch == ')' && top == '(')||
                     (ch == '}' && top == '{')||
                     (ch == ']' && top == '[') ){
                     st.pop();
                 }
                 else
                 {
                     return false;
                 }
            }
            else
            {
                return false;
            }   
        }
    }
    if(st.empty())
        return true;
    else
        return false;
 }
};
