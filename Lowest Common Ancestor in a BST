Problem Link:- https://practice.geeksforgeeks.org/problems/lowest-common-ancestor-in-a-bst/1



//Function to find the lowest common ancestor in a BST. 
Node* LCA(Node *root, int n1, int n2)
{
    // Approach correct but fails here in test cases
    // while(root!=NULL)
    // {
    //     if(n1 < root->data && n2 < root->data)
    //          root = root->left;
    //      if(n1 > root->data  && n2 > root->data)
    //          root = root->right;
    //     else
    //         return root;
    // }
    
    if(n1<root->data&& n2<root->data)
       return LCA(root->left,n1,n2);
    if(n1>root->data&& n2>root->data)
       return LCA(root->right,n1,n2);
    else
       return root;
}
