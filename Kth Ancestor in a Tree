Problem Link:- https://practice.geeksforgeeks.org/problems/kth-ancestor-in-a-tree/1

Node* solve(Node* root, int &k, int node)
{
    // Base Case
    if(root == NULL)
      return NULL;
    
    if(root->data == node)
      return root;
      
    Node* leftAns = solve(root->left, k, node);
    Node* rightAns = solve(root->right, k, node);
    
    // Left and Right se Answer aa gya h ab mai wapas ja ra hu and check karunga condition ko
    if(leftAns != NULL && rightAns == NULL)
    {
        k--;
        if(k<=0)
        {
            
            k = INT_MAX; // Humne isko itna bada bana diya h ki aap kabhi bhi decrement krke isko zero k barabar ni laa paoge.
            return root;
        }
        return leftAns;
    }
    
    if(leftAns == NULL && rightAns != NULL)
    {
        k--;
        if(k<=0)
        {
            
            k = INT_MAX; // Humne isko itna bada bana diya h ki aap kabhi bhi decrement krke isko zero k barabar ni laa paoge.
            return root;
        }
        return rightAns;
    }
    
    return NULL;
    
}
int kthAncestor(Node *root, int k, int node)
{
    Node* ans = solve(root, k, node);
    if(ans == NULL || ans->data == node)
       return -1;
    else
       return ans->data;
}
