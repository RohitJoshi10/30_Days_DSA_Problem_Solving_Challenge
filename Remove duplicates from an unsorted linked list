Problem Link:- https://practice.geeksforgeeks.org/problems/remove-duplicates-from-an-unsorted-linked-list/1



class Solution
{
    public:
    //Function to remove duplicates from unsorted linked list.
    Node * removeDuplicates( Node *head) 
    {
    //   unordered_map<int,bool>mp;
     
    //  Node*curr = head;
    //  Node*prev = NULL;
     
    //  while(curr!=NULL){
    //      if(mp[curr->data]==true){
    //          prev->next = curr->next;
    //          delete(curr);
    //          curr = prev->next;
    //      }
    //      else{
    //         mp[curr->data] = true;
    //         prev = curr;
    //         curr = curr->next;
    //      }
    //  }
    //  return head;
    
    
    
    
     unordered_set<int> seen;
 
    /* Pick elements one by one */
    Node* curr = head;
    Node* prev = NULL;
    while (curr != NULL) {
        // If current value is seen before
        if (seen.find(curr->data) != seen.end()) {
            prev->next = curr->next;
            delete (curr);
        }
        else {
            seen.insert(curr->data);
            prev = curr;
        }
        curr = prev->next;
    }
    return head;
    
    }
};
