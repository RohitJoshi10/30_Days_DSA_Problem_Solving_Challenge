Problem Link:- https://practice.geeksforgeeks.org/problems/merge-two-binary-max-heap0144/1


class Solution{
    public:
    // They want ans in Zero based indexing
    void heapify(vector<int>&arr, int n, int i)
{
    int largest = i;
    int left = 2*i+1;
    int right = 2*i+2;
    
    if(left < n && arr[largest] < arr[left])
    {
        largest = left;
    }
    if(right < n && arr[largest] < arr[right])
    {
        largest = right;
    }
    
    // Agar largest i k barabar he hota that means ki wo update he nhi hua
    // Checking condition if largest get updated or not
    if(largest != i)
    {
        // largest update hua h that means wo apni shi position pe aa gya h
        swap(arr[largest],arr[i]); 
        heapify(arr,n,largest); // niche k tree ko shi krne k liye
        
    }
    
}





    vector<int> mergeHeaps(vector<int> &a, vector<int> &b, int n, int m) {
        // Step 1:- Merge both arrays into one
        vector<int>ans;
        for(auto i:a)
          ans.push_back(i);
        for(auto i:b)
          ans.push_back(i);
        
        
        
        
        // Step 2:- Build heap using merged array
        int x = ans.size();
        for(int i=x/2-1; i>=0; i--)
        {
          heapify(ans,x,i);
        }
        
        return ans;
    }
};
